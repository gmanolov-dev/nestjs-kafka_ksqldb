### STAGE 1: Build ###
FROM node:14.16.1-alpine as build

RUN npm install -g npm@latest

WORKDIR /app/.env
COPY .env/.env.docker .

WORKDIR /app/common
COPY common .
RUN npm install \
  && npm run prebuild \
  && npm run build \
# Reducing the final size of the image
  && find . -maxdepth 1 ! \( -name 'dist' -or -name '.' -or -name '..' \) -exec rm -rf {} + 

WORKDIR /app/message-listener
COPY message-listener .
RUN npm install \
  && npm run prebuild \
  && npm run build
# Reducing the final size of the image - NOT Possible nest is not designed this way
# TODO: check how I could build includeing the node_modules
# && find . -maxdepth 1 ! \( -name 'dist' -or -name '.' -or -name '..' \) -exec rm -rf {} +

### STAGE 2: Run ###
FROM node:14.16.1-alpine
RUN npm install -g npm@latest
WORKDIR /app
COPY .docker-compose/wait-for-it.sh .
RUN chmod +x wait-for-it.sh
COPY --from=build /app .
WORKDIR /app/message-listener
# TODO: find different way to wait for rabbitmq. depends_on don't make the trick
CMD [ "/bin/sh", "../wait-for-it.sh" ]