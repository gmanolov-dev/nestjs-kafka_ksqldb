### STAGE 1: Build ###
FROM node:14.16.1-alpine AS build 

WORKDIR /app/common
RUN npm install -g npm@latest

COPY common .
RUN npm install \
  && npm run prebuild \
  && npm run build \
# Reducing the final size of the image
  && find . -maxdepth 1 ! \( -name 'dist' -or -name '.' -or -name '..' \) -exec rm -rf {} + 

WORKDIR /app/webapp
COPY webapp .
RUN npm install \
  && npm run build \
# Reducing the final size of the image
  && find . -maxdepth 1 ! \( -name 'build' -or -name '.' -or -name '..' \) -exec rm -rf {} +

### STAGE 2: Run ###
FROM nginx:1.21.0-alpine
COPY .docker-compose/nginx.conf /etc/nginx/nginx.conf
COPY --from=build /app/webapp/build /usr/share/nginx/html